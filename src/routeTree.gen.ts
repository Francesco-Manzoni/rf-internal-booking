/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as StationStationIdRouteImport } from './routes/station/$stationId'
import { Route as BookingBookingIdRouteImport } from './routes/booking/$bookingId'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const StationStationIdRoute = StationStationIdRouteImport.update({
  id: '/station/$stationId',
  path: '/station/$stationId',
  getParentRoute: () => rootRouteImport,
} as any)
const BookingBookingIdRoute = BookingBookingIdRouteImport.update({
  id: '/booking/$bookingId',
  path: '/booking/$bookingId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/booking/$bookingId': typeof BookingBookingIdRoute
  '/station/$stationId': typeof StationStationIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/booking/$bookingId': typeof BookingBookingIdRoute
  '/station/$stationId': typeof StationStationIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/booking/$bookingId': typeof BookingBookingIdRoute
  '/station/$stationId': typeof StationStationIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/booking/$bookingId' | '/station/$stationId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/booking/$bookingId' | '/station/$stationId'
  id: '__root__' | '/' | '/booking/$bookingId' | '/station/$stationId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BookingBookingIdRoute: typeof BookingBookingIdRoute
  StationStationIdRoute: typeof StationStationIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/station/$stationId': {
      id: '/station/$stationId'
      path: '/station/$stationId'
      fullPath: '/station/$stationId'
      preLoaderRoute: typeof StationStationIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/booking/$bookingId': {
      id: '/booking/$bookingId'
      path: '/booking/$bookingId'
      fullPath: '/booking/$bookingId'
      preLoaderRoute: typeof BookingBookingIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BookingBookingIdRoute: BookingBookingIdRoute,
  StationStationIdRoute: StationStationIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
